Задание по Git_Homework_1

JSON
4. Создать внешний репозиторий c названием JSON.	New
                                                  	Create new Repository

5. Клонировать репозиторий JSON на локальный компьютер. git clone git@github.com:ssavenok/JSON.git

6. Внутри локального JSON создать файл “new.json”.      touch new.json

7. Добавить файл под гит.				git add . new.json

8. Закоммитить файл.			  		git commit -m "test commit new.json"

9. Отправить файл на внешний GitHub репозиторий.        git push

10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.

Open file: cat >> new.json
Write following text:

{
  "FIO": "Sergei Aleksadrovich",
	"age": 46,
 	"number of pets": "1",
  "Future desired salary": "500"
}

11. Отправить изменения на внешний репозиторий.	 	git commit -a -m "add commit new.json
						        git push

12. Создать файл preferences.json	               	touch preferences.json

13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.

Open file: vim preferences.json
Press key "i"
Write following text:

{
   "movie" : "Interstellar",
   "TV series" : "The Big Bang Theory",
   "food " : "sandwich",
   "season" : "summer",
   "country" : "Australia"
}

Press key "Esc"
Press  ":wq"

14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
Create file: touch skills.json
Open file: vim skills.json
Press key "i"
Write following text:

{
    "Базовая теория": "Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования, SDLC, STLC.",
    "клиент-сервер": "клиент-серверная архитектура",
    "Методы запросов на сервер": "HTTP",
    "Коды ответов": "HTTP сервера",
    "Структуры": "HTTP запросов и ответов",
    "Структура": "JSON, XML",
    "Тестирование API": "через Postman (JS, автотесты API)",
    "Снятие и чтение логов": "c внешнего сервера",
    "Снифинг": " http web трафика через Charles и Fiddler",
    "Dev Tools веб браузеров": "Google Chrome, FireFox",
    "VPN": "Как работает, зачем нужен, как использовать, варианты инструментов",
    "тестирование": "Мобильное",
    "гайдлайны": "Особенность iOS, Android",
    "Сборка": "iOS приложений на XCode.",
    "Сборка": "Androidприложений на Android Studio.",
    "ADB": "управление андройд девайсами",
    "Настройка": " прокси и vpn на iOS и Android",
    "Перехват (сниффинг) мобильного трафика": "через Charles и Fiddler на iOS и Android",
    "Командная строка (terminal) Linux": "копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса",
    "Основы bash скриптинг": "автоматизация рутинных задач на сервере",
    "Доступ": "к удалённым серверам",
    "Основы SQL": "Create, Delete, Drop, Insert Into, Select, From, Where, Join",
    "База данных": "Postgres, установка, настройка и использование",
    "Нереляционная база данных": " Redis установка, настройка и использование",
    "Нагрузочное тестирование": "в Jmeter",
    "Методология разработки": "Scrum",
    "Python": "Изучение основ. Создание клиент серверного приложения"
}

Press key "Esc"
Press  ":wq"

15. Отправить сразу 2 файла на внешний репозиторий.	git add .
							git commit -m "p+s_commit new.json"
							git push

16. На веб интерфейсе создать файл bug_report.json.	press button: "Add file"
							write in form "create new file": bug_report.json

17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	write in form "Commit new file": "First Commit"
									press button "Commit new file"

18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.

Edit this file:

{ 
  "id":2,
  "Environment":"Samsung Galaxy SM-A510F, Android 7.0",
  "Title":"Add widget” button is not working on device",
  "Severity":"high",
  "Priority":"low",
  "Precondition":{"first":"clear the app from running","second":"Download app-widgets-test.apk file"},
  "TR":["Open app","Click","Add Widget","button"],
  "AR":["Nothing happens","button is not working","widget is not created on any page"],
  "ER":"Widget creation window appears widget created",
  "Attachments":"file.mp4"
}

19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	press button:"Commit changes"

20. Синхронизировать внешний и локальный репозиторий JSON	git pull  


XML
21. Создать внешний репозиторий c названием XML.	New
							Creat Repository

22. Клонировать репозиторий XML на локальный компьютер.	git clone git@github.com:ssavenok/XML.git

23. Внутри локального XML создать файл “new.xml”.	touch new.xml

24. Добавить файл под гит.				git add . new.xml

25. Закоммитить файл.					git commit -m "new xml"

26. Отправить файл на внешний GitHub репозиторий.	git push

27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать формате XML.

Edit file: vim new.xml
press "i" and write:

<new>
 <FIO>Sergei Aleksadrovich</FIO>
 <age>46</age>
 <number_of_pets>1</number_of_pets>
 <Future_desired_salary>500</Future_desired_salary>
</new> 

press "Esc"
Save and Exit press ":wq"

28. Отправить изменения на внешний репозиторий.	git commit -m "all news"
						git push

29. Создать файл preferences.xml	touch preferences.xml

30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы  посетить) в формате XML.

cat > preferences.xml
write:

<Favorite>
 <Favorite_movie>Interstellar</Favorite_movie>
 <Favorite_series>The Big Bang Theory</Favorite_series>
 <favorite_food>sandwich</favorite_food>
 <favorite_time_of_year>Summer</favorite_time_of_year>
 <country_you_like_to_visit>Australia</country_you_like_to_visit>
</Favorite> 

press "ctr+c"

31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML	

Create and open the file: cat > skills.xml
Write:

<skills>
    <Базовая_теория>Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования, SDLC, STLC</Базовая_теория>,
    <клиент_сервер>клиент-серверная архитектура</клиент_сервер>,
    <Методы_запросов_на_сервер>HTTP</Методы_запросов_на_сервер>,
    <Коды_ответов>HTTP сервера</Коды_ответов>,
    <Структуры>HTTP запросов и ответов</Структуры>,
    <Структура>JSON, XML</Структура>,
    <Тестирование_API>через Postman (JS, автотесты API)</Тестирование_API>,
    <Снятие_и_чтение_логов>c внешнего сервера</Снятие_и_чтение_логов>,
    <Снифинг>http web трафика через Charles и Fiddler</Снифинг>,
    <Dev_Tools_веб_браузеров>Google Chrome, FireFox</Dev_Tools_веб_браузеров>,
    <VPN>Как работает, зачем нужен, как использовать, варианты инструментов</VPN>,
    <тестирование>Мобильное</тестирование>,
    <гайдлайны>Особенность iOS, Android</гайдлайны>,
    <Сборка>iOS приложений на XCode</Сборка>,
    <Сборка>Androidприложений на Android Studio</Сборка>,
    <ADB>управление андройд девайсами</ADB>,
    <Настройка>прокси и vpn на iOS и Android</Настройка>,
    <Перехват_сниффинг_мобильного_трафика>через Charles и Fiddler на iOS и Android</Перехват_сниффинг_мобильного_трафика>,
    <Командная_строка_terminal_Linux>копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса</Командная_строка_terminal_Linux>,
    <Основы_bash_скриптинг>автоматизация рутинных задач на сервере</Основы_bash_скриптинг>,
    <Доступ>к удалённым серверам</Доступ>,
    <Основы_SQL>Create, Delete, Drop, Insert Into, Select, From, Where, Join</Основы_SQL>,
    <База_данных>Postgres, установка, настройка и использование</База_данных>,
    <Нереляционная_база_данных>Redis установка, настройка и использование</Нереляционная_база_данных>,
    <Нагрузочное_тестирование>Jmeter</Нагрузочное_тестирование>,
    <Методология_разработки>Scrum</Методология_разработки>,
    <Python>Изучение основ. Создание клиент серверного приложения</Python>
</skills>

press "ctr+c"

32. Сделать коммит в одну строку.	git commit -a -m "one line"

33. Отправить сразу 2 файла на внешний репозиторий.	git add .
							git commit -m "all new xml"
							git push

34. На веб интерфейсе создать файл bug_report.xml.	Add file
							Create new file: bug_report.xml
							Commit new file

35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	Edit this file
									in line "Commit changes" write new Commit: " new commit"
									Commit changes

36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.	

on the webpage:git@github.com:ssavenok/XML.git
Press on the line  "bug_report.xml"
Press button "Edit this file"
Write: 
<ID2>
	<Environment>Samsung Galaxy SM-A510F, Android 7.0</Environment>
	<Title>Add widget” button is not working on device</Title>
	<Severity>high</Severity>
	<Priority>low</Priority>
	<Precondition>clear the app from running, Download app-widgets-test.apk file</Precondition>
	<TR>Open app,Click,Add Widget,button</TR>
	<AR>Nothing happens,button is not working</AR>
	<ER>Widget creation window appears widget created</ER>
	<Attachments>file.mp4</Attachments>
</ID2>

37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.	Press the button "Commit changes" write new Commit
									Commit changes

38. Синхронизировать внешний и локальный репозиторий XML		git pul
